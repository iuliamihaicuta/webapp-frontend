/* tslint:disable */
/* eslint-disable */
/**
 * MobyLab Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProjectDTO } from './ProjectDTO';
import {
    ProjectDTOFromJSON,
    ProjectDTOFromJSONTyped,
    ProjectDTOToJSON,
    ProjectDTOToJSONTyped,
} from './ProjectDTO';

/**
 * 
 * @export
 * @interface OrganizationDetailsDTO
 */
export interface OrganizationDetailsDTO {
    /**
     * 
     * @type {string}
     * @memberof OrganizationDetailsDTO
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationDetailsDTO
     */
    name: string;
    /**
     * 
     * @type {Array<ProjectDTO>}
     * @memberof OrganizationDetailsDTO
     */
    projects: Array<ProjectDTO>;
}

/**
 * Check if a given object implements the OrganizationDetailsDTO interface.
 */
export function instanceOfOrganizationDetailsDTO(value: object): value is OrganizationDetailsDTO {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('projects' in value) || value['projects'] === undefined) return false;
    return true;
}

export function OrganizationDetailsDTOFromJSON(json: any): OrganizationDetailsDTO {
    return OrganizationDetailsDTOFromJSONTyped(json, false);
}

export function OrganizationDetailsDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganizationDetailsDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'projects': ((json['projects'] as Array<any>).map(ProjectDTOFromJSON)),
    };
}

export function OrganizationDetailsDTOToJSON(json: any): OrganizationDetailsDTO {
    return OrganizationDetailsDTOToJSONTyped(json, false);
}

export function OrganizationDetailsDTOToJSONTyped(value?: OrganizationDetailsDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'projects': ((value['projects'] as Array<any>).map(ProjectDTOToJSON)),
    };
}

